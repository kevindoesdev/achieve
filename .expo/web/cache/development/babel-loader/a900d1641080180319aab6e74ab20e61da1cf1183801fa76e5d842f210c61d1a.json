{"ast":null,"code":"import { createSlice, nanoid } from '@reduxjs/toolkit';\nimport { toIndexOf } from \"../../utils\";\nexport var initialState = {\n  items: toIndexOf([{\n    id: nanoid(),\n    label: \"First tag\"\n  }, {\n    id: nanoid(),\n    label: \"Second\"\n  }])\n};\nvar slice = createSlice({\n  name: 'tags',\n  initialState: initialState,\n  reducers: {\n    addTag: {\n      reducer: function reducer(state, action) {\n        var tag = selectTagByValue(state, action.payload.label);\n        if (!tag) {\n          state.items[action.payload.fallbackId] = {\n            id: action.payload.fallbackId,\n            label: action.payload.label\n          };\n        }\n      },\n      prepare: function prepare(label) {\n        {\n          payload: {\n            id: nanoid(), label;\n          }\n        }\n      }\n    }\n  }\n});\nvar getTagState = function getTagState(state) {\n  return state.tags || state;\n};\nexport var selectTags = function selectTags(state) {\n  return Object.values(getTagState(state).items);\n};\nexport var selectTagById = function selectTagById(state, id) {\n  return getTagState(state).items[id];\n};\nexport var selectTagByValue = function selectTagByValue(state, label) {\n  return Object.values(getTagState(state).items).find(function (tag) {\n    return tag.label === label;\n  });\n};\nexport default slice.reducer;","map":{"version":3,"names":["createSlice","nanoid","toIndexOf","initialState","items","id","label","slice","name","reducers","addTag","reducer","state","action","tag","selectTagByValue","payload","fallbackId","prepare","getTagState","tags","selectTags","Object","values","selectTagById","find"],"sources":["/home/rocket/git/achieve/src/features/tags/slice.ts"],"sourcesContent":["import { createSlice, nanoid } from '@reduxjs/toolkit'\nimport { RootState } from '../../store'\nimport { Id, IndexOf, Tag } from '../../types';\nimport { toIndexOf } from '../../utils';\n\nexport interface TagState {\n  items: IndexOf<Tag>\n} \n\nexport const initialState: TagState = {\n  items: toIndexOf([\n    {\n      id: nanoid(),\n      label: \"First tag\",\n    },\n    {\n      id: nanoid(),\n      label: \"Second\"\n    }\n  ])\n}\n\nconst slice = createSlice({\n  name: 'tags',\n  initialState,\n  reducers: {\n    addTag: {\n      reducer: (state, action) => {\n        const tag = selectTagByValue(state, action.payload.label);\n\n        if (!tag) {\n          state.items[action.payload.fallbackId] = {\n            id: action.payload.fallbackId,\n            label: action.payload.label\n          }\n        }\n      },\n      // DONT USE ANY as the return type here - fix it, don't copy it\n      prepare: (label: string): any => {{\n        payload: {\n          id: nanoid(),\n          label\n        }\n      }},\n    }\n  }\n})\n\ntype State = RootState | TagState;\n\nconst getTagState = (state: State): TagState => (state as any).tags || state;\n\nexport const selectTags = (state: State) => Object.values(getTagState(state).items);\n\nexport const selectTagById = (state: State, id: Id) => getTagState(state).items[id];\n\nexport const selectTagByValue = (state: State, label: string) =>\n  Object.values(getTagState(state).items).find((tag) => tag.label === label);\n\n  \nexport default slice.reducer\n//export const { postAdded, postUpdated, reactionAdded } = postsSlice.actions\n\n\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,MAAM,QAAQ,kBAAkB;AAGtD,SAASC,SAAS;AAMlB,OAAO,IAAMC,YAAsB,GAAG;EACpCC,KAAK,EAAEF,SAAS,CAAC,CACf;IACEG,EAAE,EAAEJ,MAAM,CAAC,CAAC;IACZK,KAAK,EAAE;EACT,CAAC,EACD;IACED,EAAE,EAAEJ,MAAM,CAAC,CAAC;IACZK,KAAK,EAAE;EACT,CAAC,CACF;AACH,CAAC;AAED,IAAMC,KAAK,GAAGP,WAAW,CAAC;EACxBQ,IAAI,EAAE,MAAM;EACZL,YAAY,EAAZA,YAAY;EACZM,QAAQ,EAAE;IACRC,MAAM,EAAE;MACNC,OAAO,EAAE,SAAAA,QAACC,KAAK,EAAEC,MAAM,EAAK;QAC1B,IAAMC,GAAG,GAAGC,gBAAgB,CAACH,KAAK,EAAEC,MAAM,CAACG,OAAO,CAACV,KAAK,CAAC;QAEzD,IAAI,CAACQ,GAAG,EAAE;UACRF,KAAK,CAACR,KAAK,CAACS,MAAM,CAACG,OAAO,CAACC,UAAU,CAAC,GAAG;YACvCZ,EAAE,EAAEQ,MAAM,CAACG,OAAO,CAACC,UAAU;YAC7BX,KAAK,EAAEO,MAAM,CAACG,OAAO,CAACV;UACxB,CAAC;QACH;MACF,CAAC;MAEDY,OAAO,EAAE,SAAAA,QAACZ,KAAa,EAAU;QAAC;UAChCU,OAAO,EAAE;YACPX,EAAE,EAAEJ,MAAM,CAAC,CAAC,EACZK,KAAK;UACP;QACF;MAAC;IACH;EACF;AACF,CAAC,CAAC;AAIF,IAAMa,WAAW,GAAG,SAAdA,WAAWA,CAAIP,KAAY;EAAA,OAAgBA,KAAK,CAASQ,IAAI,IAAIR,KAAK;AAAA;AAE5E,OAAO,IAAMS,UAAU,GAAG,SAAbA,UAAUA,CAAIT,KAAY;EAAA,OAAKU,MAAM,CAACC,MAAM,CAACJ,WAAW,CAACP,KAAK,CAAC,CAACR,KAAK,CAAC;AAAA;AAEnF,OAAO,IAAMoB,aAAa,GAAG,SAAhBA,aAAaA,CAAIZ,KAAY,EAAEP,EAAM;EAAA,OAAKc,WAAW,CAACP,KAAK,CAAC,CAACR,KAAK,CAACC,EAAE,CAAC;AAAA;AAEnF,OAAO,IAAMU,gBAAgB,GAAG,SAAnBA,gBAAgBA,CAAIH,KAAY,EAAEN,KAAa;EAAA,OAC1DgB,MAAM,CAACC,MAAM,CAACJ,WAAW,CAACP,KAAK,CAAC,CAACR,KAAK,CAAC,CAACqB,IAAI,CAAC,UAACX,GAAG;IAAA,OAAKA,GAAG,CAACR,KAAK,KAAKA,KAAK;EAAA,EAAC;AAAA;AAG5E,eAAeC,KAAK,CAACI,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}