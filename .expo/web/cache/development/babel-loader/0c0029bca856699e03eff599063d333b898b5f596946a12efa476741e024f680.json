{"ast":null,"code":"import View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport { IconButton, Text, Chip } from \"react-native-paper\";\nimport { selectTagById } from \"../tags/slice\";\nimport { notEmpty } from \"../../utils\";\nimport { useAppSelector } from \"../../app/hooks\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar TodoListItem = function TodoListItem(_ref) {\n  var item = _ref.item,\n    onItemPress = _ref.onItemPress;\n  var labelOnly = !item.tags.length;\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(IconButton, {\n      icon: \"checkbox-blank-outline\",\n      size: 24\n    }), _jsx(Pressable, {\n      onPress: function onPress() {\n        onItemPress(item.id);\n      },\n      children: labelOnly ? _jsx(LabelOnly, {\n        label: item.label\n      }) : _jsx(Composite, {\n        item: item\n      })\n    })]\n  }, item.id);\n};\nTodoListItem.defaultProps = {\n  onItemPress: function onItemPress() {}\n};\nvar Composite = function Composite(_ref2) {\n  var item = _ref2.item;\n  var tags = useAppSelector(function (state) {\n    return item.tags.map(function (tagId) {\n      return selectTagById(state, tagId);\n    }).filter(notEmpty);\n  });\n  return _jsxs(View, {\n    children: [_jsx(Text, {\n      style: {},\n      variant: \"titleMedium\",\n      children: item.label\n    }), _jsx(View, {\n      style: {\n        flexDirection: \"row\"\n      },\n      children: tags.map(function (tag) {\n        return _jsx(Chip, {\n          style: {\n            marginHorizontal: 4\n          },\n          compact: true,\n          elevated: true,\n          children: tag.label\n        }, tag.label);\n      })\n    })]\n  });\n};\nvar LabelOnly = function LabelOnly(_ref3) {\n  var label = _ref3.label;\n  return _jsx(View, {\n    style: styles.labelOnlyTextContainer,\n    children: _jsx(Text, {\n      style: styles.labelOnlyText,\n      variant: \"titleMedium\",\n      children: label\n    })\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flexDirection: \"row\",\n    marginTop: 16,\n    borderBottomColor: \"grey\",\n    borderStyle: \"dotted\",\n    borderBottomWidth: 1,\n    paddingBottom: 16\n  },\n  labelOnlyTextContainer: Object.assign({\n    flexDirection: \"column\",\n    flex: 1\n  }, Platform.OS === \"web\" ? {\n    paddingTop: 14\n  } : {}),\n  labelOnlyText: {\n    flex: 1,\n    verticalAlign: \"middle\"\n  }\n});\nexport default TodoListItem;","map":{"version":3,"names":["IconButton","Text","Chip","selectTagById","notEmpty","useAppSelector","jsx","_jsx","jsxs","_jsxs","TodoListItem","_ref","item","onItemPress","labelOnly","tags","length","View","style","styles","container","children","icon","size","Pressable","onPress","id","LabelOnly","label","Composite","defaultProps","_ref2","state","map","tagId","filter","variant","flexDirection","tag","marginHorizontal","compact","elevated","_ref3","labelOnlyTextContainer","labelOnlyText","StyleSheet","create","marginTop","borderBottomColor","borderStyle","borderBottomWidth","paddingBottom","Object","assign","flex","Platform","OS","paddingTop","verticalAlign"],"sources":["/home/rocket/git/achieve/src/features/todos/TodoListItem.tsx"],"sourcesContent":["import { View, StyleSheet, Platform, Pressable } from \"react-native\";\nimport { IconButton, Text, Chip } from \"react-native-paper\";\nimport { Id, Todo } from \"../../types\";\nimport { selectTagById } from '../tags/slice'\nimport { notEmpty } from \"../../utils\";\nimport { useAppSelector } from \"../../app/hooks\";\n\ninterface TodoListItemProps {\n  item: Todo,\n  onItemPress: (id: Id) => void\n}\n\nconst TodoListItem = ({ item, onItemPress }: TodoListItemProps) => {\n  const labelOnly = !item.tags.length;\n\n  return (\n    <View key={item.id} style={styles.container}>\n      <IconButton icon=\"checkbox-blank-outline\" size={24} />\n      <Pressable onPress={() => {\n        onItemPress(item.id)}}>\n        {labelOnly ? (\n          <LabelOnly label={item.label} />\n        ) : (\n          <Composite item={item} />\n        )}\n      </Pressable>\n    </View>\n  );\n};\n\nTodoListItem.defaultProps = { onItemPress: () => {} };\n\ninterface CompositeProps {\n  item: Todo\n}\n\nconst Composite = ({ item }: CompositeProps) => {\n  \n  const tags = useAppSelector((state) => {\n    return item.tags.map(tagId => selectTagById(state, tagId)).filter(notEmpty)\n  })\n  \n  return (\n    <View>\n      <Text style={{}} variant=\"titleMedium\">\n        {item.label}\n      </Text>\n      <View style={{ flexDirection: \"row\" }}>\n        {tags.map((tag) => (\n          <Chip\n            key={tag.label}\n            style={{ marginHorizontal: 4 }}\n            compact={true}\n            elevated={true}\n          >\n            {tag.label}\n          </Chip>\n        ))}\n      </View>\n    </View>\n  );\n};\n\ninterface LabelOnlyProps {\n  label: string\n}\n\nconst LabelOnly = ({ label }: LabelOnlyProps) => (\n  <View style={styles.labelOnlyTextContainer}>\n    <Text style={styles.labelOnlyText} variant=\"titleMedium\">\n      {label}\n    </Text>\n  </View>\n);\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: \"row\",\n    marginTop: 16,\n    borderBottomColor: \"grey\",\n    borderStyle: \"dotted\",\n    borderBottomWidth: 1,\n    paddingBottom: 16,\n  },\n  labelOnlyTextContainer: Object.assign(\n    {\n      flexDirection: \"column\",\n      flex: 1,\n    },\n    Platform.OS === \"web\" ? { paddingTop: 14 } : {}\n  ),\n  labelOnlyText: { flex: 1, verticalAlign: \"middle\" },\n} as any);\n\nexport default TodoListItem;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}