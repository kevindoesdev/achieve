{"ast":null,"code":"import { createSlice, nanoid } from '@reduxjs/toolkit';\nvar toIndexOf = function toIndexOf(items) {\n  var result = {};\n  items.forEach(function (item) {\n    result[item.id] = item;\n  });\n  return result;\n};\nvar initialState = {\n  items: toIndexOf([{\n    id: nanoid(),\n    label: \"This is the first item\"\n  }, {\n    id: nanoid(),\n    label: \"This is the second item\"\n  }, {\n    id: nanoid(),\n    label: \"This is the third item\"\n  }])\n};\nvar slice = createSlice({\n  name: 'todos',\n  initialState: initialState,\n  reducers: {}\n});\nexport var selectTodos = function selectTodos(filter) {\n  return function (state) {\n    return Object.values(state.todos.items);\n  };\n};\nexport var selectTodoById = function selectTodoById(state, id) {\n  return state.todos.items[id];\n};\nexport default slice.reducer;","map":{"version":3,"names":["createSlice","nanoid","toIndexOf","items","result","forEach","item","id","initialState","label","slice","name","reducers","selectTodos","filter","state","Object","values","todos","selectTodoById","reducer"],"sources":["/home/rocket/git/achieve/src/features/todos/slice.ts"],"sourcesContent":["import { createSlice, nanoid } from '@reduxjs/toolkit'\nimport { RootState } from '../../store'\nimport { Id, Idable, IndexOf, Todo } from '../../types';\n\nconst toIndexOf = <T extends Idable>(items: T[]): IndexOf<T> => {\n  const result: IndexOf<T> = {};\n  items.forEach(item => {\n    result[item.id] = item;\n  })\n  return result;\n}\n\nexport interface TodoState {\n  items: IndexOf<Todo>\n} \n\nconst initialState: TodoState = {\n  items: toIndexOf([\n    {\n      id: nanoid(),\n      label: \"This is the first item\",\n    },\n    {\n      id: nanoid(),\n      label: \"This is the second item\"\n    },\n    {\n      id: nanoid(),\n      label: \"This is the third item\"\n    }\n  ])\n}\n\n\nconst slice = createSlice({\n  name: 'todos',\n  initialState,\n  reducers: {\n\n  }\n})\n\nexport interface TodoFilter {}\n\nexport const selectTodos = (filter: TodoFilter) => (state: RootState) => Object.values(state.todos.items);\n\nexport const selectTodoById = (state: RootState, id: Id) =>\n  state.todos.items[id]\n\n//export const { postAdded, postUpdated, reactionAdded } = postsSlice.actions\n\nexport default slice.reducer\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,MAAM,QAAQ,kBAAkB;AAItD,IAAMC,SAAS,GAAG,SAAZA,SAASA,CAAsBC,KAAU,EAAiB;EAC9D,IAAMC,MAAkB,GAAG,CAAC,CAAC;EAC7BD,KAAK,CAACE,OAAO,CAAC,UAAAC,IAAI,EAAI;IACpBF,MAAM,CAACE,IAAI,CAACC,EAAE,CAAC,GAAGD,IAAI;EACxB,CAAC,CAAC;EACF,OAAOF,MAAM;AACf,CAAC;AAMD,IAAMI,YAAuB,GAAG;EAC9BL,KAAK,EAAED,SAAS,CAAC,CACf;IACEK,EAAE,EAAEN,MAAM,CAAC,CAAC;IACZQ,KAAK,EAAE;EACT,CAAC,EACD;IACEF,EAAE,EAAEN,MAAM,CAAC,CAAC;IACZQ,KAAK,EAAE;EACT,CAAC,EACD;IACEF,EAAE,EAAEN,MAAM,CAAC,CAAC;IACZQ,KAAK,EAAE;EACT,CAAC,CACF;AACH,CAAC;AAGD,IAAMC,KAAK,GAAGV,WAAW,CAAC;EACxBW,IAAI,EAAE,OAAO;EACbH,YAAY,EAAZA,YAAY;EACZI,QAAQ,EAAE,CAEV;AACF,CAAC,CAAC;AAIF,OAAO,IAAMC,WAAW,GAAG,SAAdA,WAAWA,CAAIC,MAAkB;EAAA,OAAK,UAACC,KAAgB;IAAA,OAAKC,MAAM,CAACC,MAAM,CAACF,KAAK,CAACG,KAAK,CAACf,KAAK,CAAC;EAAA;AAAA;AAEzG,OAAO,IAAMgB,cAAc,GAAG,SAAjBA,cAAcA,CAAIJ,KAAgB,EAAER,EAAM;EAAA,OACrDQ,KAAK,CAACG,KAAK,CAACf,KAAK,CAACI,EAAE,CAAC;AAAA;AAIvB,eAAeG,KAAK,CAACU,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}